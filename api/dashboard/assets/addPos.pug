doctype html
- const addingPos = true;
head
    meta(charset="UTF-8")
    meta(name="viewport" content="width=device-width, initial-scale=1.0")
    title Add a Position 
    link(rel="stylesheet", href="../assets/styles.css")
    script(src="../assets/scripts.js")

body#tsparticles(class="addPosBody")
    div.form(id="loginForm" disabled = isAuthenticated ? 'disabled' : false)
        .title Login
        .subtitle Please enter the password

        .input-container.ic1
            input#password.input(placeholder="" type="password" name="password")
            #passworddiv.cut.cut-short
            label#passwordlabel.iLabel(for="password") Password

        button.submit(type="button" onclick="authenticate()") Submit
    
    div#originalContent
        form.form(action="/addPos" method="post")
            .title Welcome 
            .subtitle Add a position to the Algory Dashboard

            a.posButton(href = "/sellPos" type="button") SELL A POSITION

            .input-container.ic1
                input#ticker.input(placeholder="" type="text" name="ticker")
                #tickerdiv.cut.cut-short
                label#tickerlabel.iLabel(for="ticker") Ticker 
            
            .input-container.ic2
                input#startdate.input(placeholder="" type="text" name="startdate")
                #startdatediv.cut.cut-short
                label#startdatelabel.iLabel(for="startdate") Start Date (YYYY-MM-DD)

            //- .input-container.ic2
            //-     input#startprice.input(placeholder="" type="text" name="startprice")
            //-     #startpricediv.cut.cut-short
            //-     label#startpricelabel.iLabel(for="startprice") Entry Price

            .input-container.ic2
                input#shares.input(placeholder="" type="text" name="shares")
                #sharesdiv.cut
                label#shareslabel.iLabel(for="shares") Number of Shares 

            .input-container.ic2
                input#assetclass.input(placeholder="" type="text" name="assetclass")
                #assetclassdiv.cut
                label#assetclasslabel.iLabel(for="assetclass") Asset Class (either E or FI)

            button.submit(type="submit") submit 

    script(src="https://cdnjs.cloudflare.com/ajax/libs/tsparticles/1.18.1/tsparticles.min.js" integrity="sha512-PYHWDEuXOTJ9MZ+/QHqkbgiEYZ+LImQv3i/9NyYOABFvK37e4q4Wg7aQDN1JpoGiEu1TYZh6JMrZluZox2gbDA==" crossorigin="anonymous")

    script.
        document.addEventListener('DOMContentLoaded', function() {

            const passwordInput = document.getElementById('password');
            const passwordLabel = document.getElementById('passwordlabel');
            const passwordDiv = document.getElementById('passworddiv');

            const tickerInput = document.getElementById('ticker');
            const tickerLabel = document.getElementById('tickerlabel');
            const tickerDiv = document.getElementById('tickerdiv');

            const startdateInput = document.getElementById('startdate');
            const startdateLabel = document.getElementById('startdatelabel');
            const startdateDiv = document.getElementById('startdatediv');

            const startpriceInput = document.getElementById('startprice');
            const startpriceLabel = document.getElementById('startpricelabel');
            const startpriceDiv = document.getElementById('startpricediv');

            const sharesInput = document.getElementById('shares');
            const sharesLabel = document.getElementById('shareslabel');
            const sharesDiv = document.getElementById('sharesdiv');

            const assetclassInput = document.getElementById('assetclass');
            const assetclassLabel = document.getElementById('assetclasslabel');
            const assetclassDiv = document.getElementById('assetclassdiv');

            // Initial check on page load
            checkInput();

            // Add event listener to input element
            passwordInput.addEventListener('input', function() {
                checkInput();
            });
            passwordInput.addEventListener('keydown', async function (e) {
                await new Promise(resolve => setTimeout(resolve, 5));
                if (e.key === "Enter") {
                    authenticate();
                }
            });
            tickerInput.addEventListener('input', function() {
                checkInput();
            });
            startdateInput.addEventListener('input', function() {
                checkInput();
            });
            startpriceInput.addEventListener('input', function() {
                checkInput();
            });
            sharesInput.addEventListener('input', function() {
                checkInput();
            });
            assetclassInput.addEventListener('input', function() {
                checkInput();
            });

            function checkInput() {
                const passwordValue = passwordInput.value.trim();

                // Check if input is populated
                if (passwordValue !== '') {
                passwordLabel.classList.add('persist');
                passwordDiv.classList.add('persist');
                } else {
                passwordLabel.classList.remove('persist');
                passwordDiv.classList.remove('persist');
                }

                const tickerValue = tickerInput.value.trim();

                // Check if input is populated
                if (tickerValue !== '') {
                tickerLabel.classList.add('persist');
                tickerDiv.classList.add('persist');
                } else {
                tickerLabel.classList.remove('persist');
                tickerDiv.classList.remove('persist');
                }

                const startdateValue = startdateInput.value.trim();

                // Check if input is populated
                if (startdateValue !== '') {
                startdateLabel.classList.add('persist');
                startdateDiv.classList.add('persist');
                } else {
                startdateLabel.classList.remove('persist');
                startdateDiv.classList.remove('persist');
                }

                const startpriceValue = startpriceInput.value.trim();

                // Check if input is populated
                if (startpriceValue !== '') {
                startpriceLabel.classList.add('persist');
                startpriceDiv.classList.add('persist');
                } else {
                startpriceLabel.classList.remove('persist');
                startpriceDiv.classList.remove('persist');
                }

                const sharesValue = sharesInput.value.trim();

                // Check if input is populated
                if (sharesValue !== '') {
                sharesLabel.classList.add('persist');
                sharesDiv.classList.add('persist');
                } else {
                sharesLabel.classList.remove('persist');
                sharesDiv.classList.remove('persist');
                }

                const assetclassValue = assetclassInput.value.trim();

                // Check if input is populated
                if (assetclassValue !== '') {
                assetclassLabel.classList.add('persist');
                assetclassDiv.classList.add('persist');
                } else {
                assetclassLabel.classList.remove('persist');
                assetclassDiv.classList.remove('persist');
                }
            }
        });

        const particles = {
            "fpsLimit": 60,
            "particles": {
            "number": {
                "value": 80,
                "density": {
                "enable": true,
                "value_area": 800
                }
            },
            "color": {
                "value": "#ff0000",
                "animation": {
                "enable": true,
                "speed": 20,
                "sync": true
                }
            },
            "shape": {
                "type": "circle",
                "stroke": {
                "width": 0
                },
                "polygon": {
                "nb_sides": 5
                },
            },
            "opacity": {
                "value": 0.5,
                "random": false,
                "anim": {
                "enable": false,
                "speed": 3,
                "opacity_min": 0.1,
                "sync": false
                }
            },
            "size": {
                "value": 3,
                "random": true,
                "anim": {
                "enable": false,
                "speed": 20,
                "size_min": 0.1,
                "sync": false
                }
            },
            "links": {
                "enable": true,
                "distance": 100,
                "color": "#ffffff",
                "opacity": 0.4,
                "width": 1
            },
            "move": {
                "enable": true,
                "speed": 6,
                "direction": "none",
                "random": false,
                "straight": false,
                "out_mode": "out",
                "attract": {
                "enable": false,
                "rotateX": 600,
                "rotateY": 1200
                }
            }
            },
            "interactivity": {
            "detect_on": "canvas",
            "events": {
                "onhover": {
                "enable": true,
                "mode": "repulse"
                },
                "onclick": {
                "enable": true,
                "mode": "push"
                },
                "resize": true
            },
            "modes": {
                "grab": {
                "distance": 400,
                "line_linked": {
                    "opacity": 1
                }
                },
                "bubble": {
                "distance": 400,
                "size": 40,
                "duration": 2,
                "opacity": 0.8
                },
                "repulse": {
                "distance": 200
                },
                "push": {
                "particles_nb": 4
                },
                "remove": {
                "particles_nb": 2
                }
            }
            },
            "retina_detect": true,
            "background": {
            "color": "#212121",
            "image": "",
            "position": "50% 50%",
            "repeat": "no-repeat",
            "size": "cover"
            }
        };
        tsParticles.load('tsparticles', particles);